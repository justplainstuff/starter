name: ci ðŸš€

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      NODE_ENV: development
      PORT: 3000
      DB_URL: data.db
      SMTP_HOST: smtp.example.com
      SMTP_USER: user@example.com
      SMTP_PASS: password
      LOG_LEVEL: debug
    steps:
      - uses: actions/checkout@v4
        name: checkout code ðŸ“¥
      - name: install pnpm ðŸ“¦
        uses: pnpm/action-setup@v4
        with:
          version: 9.5.0
      - name: setup node ðŸŸ¢
        uses: actions/setup-node@v4
        with:
          node-version: "20.10.0"
          cache: "pnpm"
      - name: install dependencies ðŸ”§
        run: pnpm install
      - name: build âœ…
        run: pnpm build
      - name: generate migration âœ…
        run: pnpm migrate foobar
      - name: run migration âœ…
        run: pnpm migrate
      - name: seed âœ…
        run: pnpm pls seed
      - name: test âœ…
        run: pnpm test
      - name: routes âœ…
        run: pnpm pls routes
      - name: doctor âœ…
        run: pnpm pls info
      - name: 200 ok âœ…
        shell: bash
        run: |
          pnpm dev &
          sleep 5
          if [ "$RUNNER_OS" == "Windows" ]; then
            response=$(curl.exe -s http://localhost:3000/health)
          else
            response=$(curl -s http://localhost:3000/health)
          fi
          if echo "$response" | grep -q '{"status":"ok"}'; then
            echo "Server started and healthy"
            echo "Response: $response"
          else
            echo "Server check failed"
            echo "Unexpected response: $response"
            exit 1
          fi
          if [ "$RUNNER_OS" == "Windows" ]; then
            taskkill //F //PID $(tasklist //FI "IMAGENAME eq node.exe" //FO CSV //NH | findstr /r /c:".*\.exe" | cut -d',' -f2 | tr -d '"') 2>NUL
          else
            kill $!
          fi
      # TODO write mailer, write command, run command, assert shell output
      # TODO write scheduler, write command, run command, assert shell output, periodic counter
      # TODO write job, write command, run command, assert shell output
      # TODO pnpm dev to start server, wait 5 seconds, curl localhost:3000/health, assert status 200
